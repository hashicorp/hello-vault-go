version: "3.9"
services:
  app:
    build: .
    environment:
      MY_ADDRESS:                   :8080
      VAULT_ADDRESS:                http://vault:8200
      VAULT_APPROLE_SECRET_ID_FILE: path/to/wrapping-token  # role id populated in entrypoint
      VAULT_DATABASE_CREDS_PATH:    database/creds/dev-readonly
      VAULT_API_KEY_PATH:           kv-v2/data/api-key
      DATABASE_HOSTNAME:            db
      DATABASE_PORT:                5432
      DATABASE_NAME:                posgres
      DATABASE_TIMEOUT:             10s
      SECURE_SERVICE_ADDRESS:       http://secure-service/api
    ports:
      - "8080:8080"
    depends_on:
      - db
      - vault
      - secure-service

  db:
    image: postgres:14.0
    restart: always
    environment:
      POSTGRES_PASSWORD: rootpassword
    volumes:
      - "dbdata:/var/lib/postgresql/data"
      - "./setup/db-scripts:/docker-entrypoint-initdb.d/"
    ports:
      - "5432:5432"

  vault:
    image: vault:latest
    # volumes:
    #   - "vaultdata:/vault/file"
    #   - "./setup/vault-server:/vault/config"
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    # command:
    #   - "server"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root

  # secure-service is a simulated 3rd party service that requires a specific header to get a 200 response
  secure-service:
    image: nginx:latest
    volumes:
      - type:      bind
        source:    ./setup/nginx/default.conf.template
        target:    /etc/nginx/templates/default.conf.template
    ports:
      - "1717:80"
    environment:
      # EXPECTED_API_KEY sets the expected value for incoming requests' header X-API-KEY
      EXPECTED_API_KEY: my-secret-key

volumes:
  dbdata:
  # vaultdata:
